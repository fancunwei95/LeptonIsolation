// electron
calc_ptcone20 = 0; calc_ptcone30 = 0; calc_ptcone40 = 0; calc_ptvarcone20 = 0; calc_ptvarcone30 = 0; calc_ptvarcone40 = 0;
float var_R_20 = std::min(10e3/electron->pt(), 0.20); float var_R_30 = std::min(10e3/electron->pt(), 0.30); float var_R_40 = std::min(10e3/electron->pt(), 0.40);
std::set<const xAOD::TrackParticle*> electron_tracks = xAOD::EgammaHelpers::getTrackParticles((const xAOD::Egamma*)electron, true);
for (auto trk : filtered_tracks) {
    if (!trk) continue;
    bool matches_own_track = false;
    for (auto own_track : electron_tracks)
        if (trk == own_track) matches_own_track = true;
    if (matches_own_track) continue;
    if (trk->vertex() && trk->vertex()!=primary_vertex) continue;
    if (trk->p4().DeltaR(electron->p4()) < 0.20) calc_ptcone20 += trk->pt();
    if (trk->p4().DeltaR(electron->p4()) < 0.30) calc_ptcone30 += trk->pt();
    if (trk->p4().DeltaR(electron->p4()) < 0.40) calc_ptcone40 += trk->pt();
    if (trk->p4().DeltaR(electron->p4()) < var_R_20) calc_ptvarcone20 += trk->pt();
    if (trk->p4().DeltaR(electron->p4()) < var_R_30) calc_ptvarcone30 += trk->pt();
    if (trk->p4().DeltaR(electron->p4()) < var_R_40) calc_ptvarcone40 += trk->pt();
}
calc_topoetcone20 = 0; calc_topoetcone30 = 0; calc_topoetcone40 = 0;
const xAOD::CaloCluster *egclus = this->m_current_electrons.at(idx)->caloCluster();
for (const auto& clus : *calo_clusters) {
    if (clus->e()<0) continue;
    if (egclus->p4().DeltaR(clus->p4()) < 0.2) calc_etcone20 += clus->et();
    if (egclus->p4().DeltaR(clus->p4()) < 0.3) calc_etcone30 += clus->et();
    if (egclus->p4().DeltaR(clus->p4()) < 0.4) calc_etcone40 += clus->et();
}

// muon
calc_ptcone20 = 0; calc_ptcone30 = 0; calc_ptcone40 = 0; calc_ptvarcone20 = 0; calc_ptvarcone30 = 0; calc_ptvarcone40 = 0;
float var_R_20 = std::min(10e3/muon->pt(), 0.20); float var_R_30 = std::min(10e3/muon->pt(), 0.30); float var_R_40 = std::min(10e3/muon->pt(), 0.40);
xAOD::Muon::TrackParticleType type = xAOD::Muon::TrackParticleType::InnerDetectorTrackParticle;
auto own_track = this_muon->trackParticle(type);
for (auto trk : filtered_tracks) {
    if (!trk) continue;
    if (trk == own_track) continue;
    if (trk->p4().DeltaR(muon->p4()) < 0.20) calc_ptcone20 += trk->pt();
    if (trk->p4().DeltaR(muon->p4()) < 0.30) calc_ptcone30 += trk->pt();
    if (trk->p4().DeltaR(muon->p4()) < 0.40) calc_ptcone40 += trk->pt();
    if (trk->p4().DeltaR(muon->p4()) < var_R_20) calc_ptvarcone20 += trk->pt();
    if (trk->p4().DeltaR(muon->p4()) < var_R_30) calc_ptvarcone30 += trk->pt();
    if (trk->p4().DeltaR(muon->p4()) < var_R_40) calc_ptvarcone40 += trk->pt();
}
calc_topoetcone20 = 0; calc_topoetcone30 = 0; calc_topoetcone40 = 0;
std::vector<fastjet::PseudoJet> input_clus;
for (const auto& cluster : *calo_clusters) {
    if (!cluster) continue;
    if (cluster->e()<0) continue;
    float dR = cluster->p4().DeltaR(muon->p4());
    if (dR < 0.2 && dR > 0.05) calc_etcone20 += cluster->et();
    if (dR < 0.3 && dR > 0.05) calc_etcone30 += cluster->et();
    if (dR < 0.4 && dR > 0.05) calc_etcone40 += cluster->et();
}
